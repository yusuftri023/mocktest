{
  "openapi": "3.0.3",
  "info": {
    "title": "Mock Test - OpenAPI 3.0",
    "description": "Dokumentasi API Mock Test\n\n- [Repository of Mock Test System](https://github.com/yusuftri023/mocktest)",
    "contact": {
      "email": "yusuftri023@gmail.com"
    },
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://busy-teal-scorpion-robe.cyclic.app"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Users data/profiles operations"
    },
    {
      "name": "Auth (Token Based Authentication)",
      "description": "User authentication and authorization"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": ["Auth (Token Based Authentication)"],
        "summary": "Create a new account for the website",
        "description": "Create a new account for the website",
        "operationId": "registerForm",
        "requestBody": {
          "description": "request form for registration",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_name": {
                    "type": "string",
                    "example": "Hendra"
                  },
                  "password": {
                    "type": "string",
                    "example": 123456
                  },
                  "email": {
                    "type": "string",
                    "example": "hendraww23@gmail.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "string",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Account has been created"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "user_name": {
                          "type": "integer",
                          "example": "hendra"
                        },
                        "email": {
                          "type": "string",
                          "example": "hendrawww@gmail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User does not exist"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Auth (Token Based Authentication)"],
        "summary": "Login to authenticate and create json web token",
        "description": "Login to authenticate and create json web token",
        "operationId": "loginAccount",
        "requestBody": {
          "description": "Login and authenticate user by giving json web token",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": 123456
                  },
                  "email": {
                    "type": "string",
                    "example": "demo@gmail.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "string",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Login success"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50X2lkIjozNywiYWNjb3VudF9udW1iZXIiOjM3LCJiYWxhbmNlIjoiMTAwMDAwIiwidXNlcl9pZCI6NSwiZW1haWwiOiJqYW1AZ21haWwuY29tIiwiY3JlYXRlQXQiOiIyMDIzLTExLTA3VDE0OjA4OjM1LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTExLTA3VDA3OjA4OjM1LjI1M1oiLCJpYXQiOjE2OTkzNTA5MTEsImV4cCI6MTY5OTM1NDUxMX0.lbzDZdEdNOceKx-e82zT5A8lW15b4OrN_iD3-UwE-RU"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Login failed : Your email or password does not match"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": ["Auth (Token Based Authentication)"],
        "summary": "Logout by clearing cookies from your browser",
        "description": "Login to authenticate and create json web token",
        "operationId": "logoutAccount",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are now logged out"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/whoami": {
      "get": {
        "tags": ["Auth (Token Based Authentication)"],
        "summary": "Check the data of the current authorized user",
        "description": "Check the data of the current authorized user",
        "operationId": "whoami",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "string",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Account has been created"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "account_id": {
                              "type": "integer",
                              "example": 25
                            },
                            "account_number": {
                              "type": "integer",
                              "example": 25
                            },
                            "balance": {
                              "type": "integer",
                              "example": 1000000
                            },
                            "user_id": {
                              "type": "integer",
                              "example": 5
                            },
                            "email": {
                              "type": "string",
                              "example": "yusufhaha@gmail.com"
                            },
                            "createAt": {
                              "type": "string",
                              "example": "2023-11-07T14:08:35.000Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2023-11-07T07:08:35.253Z"
                            },
                            "iat": {
                              "type": "integer",
                              "example": 1699350911
                            },
                            "exp": {
                              "type": "integer",
                              "example": 1699354511
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "string",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not authorized to access this page!"
                    },
                    "data": {
                      "example": null
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/users/task": {
      "get": {
        "tags": ["Users"],
        "summary": "Get User to do list",
        "description": "Get User to do list",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "string",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Request has succeeded"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "user_name": {
                          "type": "string",
                          "example": "Hendra Gunawan"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "string",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "You're not authorized to access this page!"
                    },
                    "data": {
                      "example": null
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Users"],
        "summary": "Add a new task for the user",
        "description": "Add a new task for the user",
        "operationId": "postUserTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "demo@gmail.com"
                  },
                  "task_name": {
                    "type": "string",
                    "example": "Cuci Baju"
                  },
                  "task_status": {
                    "type": "string",
                    "example": "Completed"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "string",
                      "example": 8887329342
                    },
                    "message": {
                      "type": "string",
                      "example": "New task added"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "task_name": {
                          "type": "string",
                          "example": "Ngoding Mock Task"
                        },
                        "task_status": {
                          "type": "string",
                          "example": "Completed"
                        },
                        "poster_id": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/task/{task_id}": {
      "put": {
        "tags": ["Users"],
        "summary": "update task status for the user",
        "description": "update task status for the user",
        "operationId": "putUserTask",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "task_id",
            "required": true,
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "description": "email",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "task_status": {
                    "type": "string",
                    "example": "Completed"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "string",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Task status updated"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "task_name": {
                          "type": "string",
                          "example": "Ngoding Mock Task"
                        },
                        "task_status": {
                          "type": "string",
                          "example": "Completed"
                        },
                        "poster_id": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete task for the user",
        "description": "Delete a task for the user",
        "operationId": "deleteUserTask",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "task_id",
            "required": true,
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "code": {
                      "type": "string",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Task deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "name": "authorization",
        "in": "cookie"
      }
    }
  }
}
